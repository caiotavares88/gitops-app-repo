# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START cloudbuild]
steps:
# This step runs the unit tests on the app
- name: 'python:3.7-slim'
  id: Test
  entrypoint: /bin/sh
  args:
  - -c
  - 'pip install flask && python test_app.py -v'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/my_app:$SHORT_SHA'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/my_app:$SHORT_SHA'

# Access the id_github file from Secret Manager, and setup SSH
- name: 'gcr.io/cloud-builders/git'
  secretEnv: ['SSH_KEY']
  entrypoint: 'bash'
  args:
  - -c
  - |
    set -x && \
    echo "$$SSH_KEY" >> /root/.ssh/id_rsa && \
    chmod 400 /root/.ssh/id_rsa && \
    cp workingdir/known_hosts.github /root/.ssh/known_hosts 
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# This step clones the hello-cloudbuild-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    git clone https://github.com/caiottavares/gitops-env-repo.git && \
    cd gitops-env-repo && \
    git checkout production && \
    sed -i "s/gcr.io\/.*/gcr.io\/${PROJECT_ID}\/my_app\:${SHORT_SHA}/" manifests/deployment.yaml && \
    git config --global user.email "caio@solartdesign.com.br" && \
    git config --global user.name "Caio Tavares" && \    
    git add manifests/deployment.yaml && \    
    git commit -m "Deploying new image ${SHORT_SHA}" && \    
    git push origin production
  volumes:
  - name: 'ssh'
    path: /root/.ssh


# This step generates the new manifest
#- name: 'gcr.io/cloud-builders/gcloud'
#  id: Generate manifest
#  entrypoint: /bin/sh
#  args:
#  - '-c'
#  - |     
#    sed -i "s/gcr.io\/.*/gcr.io\/${PROJECT_ID}\/my_app\:${SHORT_SHA}/" gitops-env-repo/manifests/deployment.yaml

# This step pushes the manifest back to gitops-env-repo
#- name: 'gcr.io/cloud-builders/gcloud'
#  id: Push manifest
#  entrypoint: /bin/sh
#  args:
#  - '-c'
#  - |
#    set -x && \
#    cd gitops-env-repo && \
#    git config --global user.email "caio@solartdesign.com.br" && \
#    git config --global user.name "Caio Tavares" && \
#    git remote add origin git@github.com:caiottavares/gitops-env-repo.git && \
#    git add manifests/deployment.yaml && \    
#    git commit -m "Deploying new image ${SHORT_SHA}" && \
#    git remote -v && \
#    git push origin production
#  volumes:
#  - name: 'ssh'
#    path: /root/.ssh


#- name: 'gcr.io/cloud-builders/kubectl'
#  id: Deploy
#  args:
#  - 'apply'
#  - '-f'
#  - 'gitops-env-repo/manifests/deployment.yaml'
#  env:
#  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
#  - 'CLOUDSDK_CONTAINER_CLUSTER=caio-gke'

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/github-secret/versions/latest
    env: 'SSH_KEY'

# [END cloudbuild]
